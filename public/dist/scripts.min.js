angular.module("nineJewelsApp",["ui.router"]).run(function($rootScope,$state,$stateParams,$location){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams,$rootScope.$on("$locationChangeStart",function(){ga("set","page",$location.path()),ga("send","pageview")})}).config(function($stateProvider,$locationProvider,$urlRouterProvider){$stateProvider.state("home",{url:"/",templateUrl:"app/views/pages/home.html",controller:"homeCtrl",controllerAs:"vm",data:{pageTitle:"home"}}).state("game",{url:"/play",templateUrl:"app/views/pages/game.html",controller:"gameCtrl",controllerAs:"vm",data:{pageTitle:"game"}}).state("invalid",{url:"/invalid",templateUrl:"app/views/pages/invalid.html",data:{pageTitle:"invalid url"}}),$locationProvider.html5Mode(!0),$urlRouterProvider.otherwise("/invalid")}),angular.module("nineJewelsApp").controller("gameCtrl",function(userService,gameService,$state,$timeout){function getAndShowHint(wordId){gameService.getHint(wordId).then(function(res){if(res.data.success){var hint=res.data.hint.toLowerCase();vm.userAnswer=hint}else console.log(res.data.error)})}function checkSolution(userAnswer,wordId){gameService.checkSolution(userAnswer,wordId).then(function(res){res.data.success?res.data.correct?handleCorrectSolution():handleWrongSolution():console.log(res.data.message)})}function handleCorrectSolution(){flash("Correct!"),hintUsed?(hintUsed=!1,3===++vm.hintCount&&(updateUserScore(),getScoreBoard(),vm.hintCount=0)):(updateUserScore(),getScoreBoard()),getRandomWord()}function handleWrongSolution(){flash("Wrong!")}function getRandomWord(){vm.userAnswer="",gameService.getRandomWord().then(function(res){res.data.success?(loadedWord=res.data.word,vm.shuffledWord=loadedWord.shuffledWord):console.log(res.data.message)})}function getScoreBoard(){gameService.getScoreBoard().then(function(res){res.data.success?(vm.scoreBoard=[],res.data.users.forEach(function(user){user.userName.length&&vm.scoreBoard.push(user)})):console.log(res.data.message)})}function updateUserScore(){userService.updateUserScore(userId).then(function(res){res.data.success||console.log(res.data.message)})}function flash(message){vm.flashVisible=!0,vm.status=message,$timeout(function(){vm.flashVisible=!1},1500)}var vm=this;vm.flashVisible=!1,vm.status="default",vm.hintCount=0;var loadedWord,hintUsed=!1,userId=userService.getIdFromLocal();getRandomWord(),getScoreBoard(),vm.submitWord=function(){checkSolution(vm.userAnswer,loadedWord.id)},vm.getAnotherWord=function(){hintUsed=!1,getRandomWord()},vm.showHint=function(){getAndShowHint(loadedWord.id),hintUsed=!0},vm.titleClick=function(){$state.go("home")}}),angular.module("nineJewelsApp").controller("homeCtrl",function(userService,gameService,$state){function addUserAndProceed(){userService.addUser(vm.username).then(function(res){res.data.success?(userService.saveIdToLocal(res.data.userId),$state.go("game")):console.log(res.data.message)})}function updateUserNameAndProceed(){userService.updateUserName(vm.username,userId).then(function(res){console.log(res),res.data.found?res.data.success?$state.go("game"):console.log(res.data.message):addUserAndProceed()})}var vm=this,userId=userService.getIdFromLocal();userId&&userService.getUserName(userId).then(function(res){res.data.success?vm.username=res.data.userName.userName:console.log(res.data.message)}),gameService.getScoreBoard().then(function(res){res.data.success?(vm.scoreBoard=[],res.data.users.forEach(function(user){user.userName.length&&vm.scoreBoard.push(user)})):console.log(res.data.message)}),vm.startGame=function(){userId?updateUserNameAndProceed():addUserAndProceed()},vm.titleClick=function(){$state.go("home")}}),angular.module("nineJewelsApp").factory("gameService",function($http){return{getScoreBoard:function(){return $http.get("api/users")},getRandomWord:function(){return $http.get("api/words/")},checkSolution:function(userAnswer,wordId){return $http.get("api/words/check?answer="+userAnswer+"&id="+wordId)},getHint:function(wordId){return $http.get("api/words/hint?id="+wordId)}}}),angular.module("nineJewelsApp").factory("userService",function($http){return{getIdFromLocal:function(){return localStorage.userId},saveIdToLocal:function(id){localStorage.setItem("userId",id)},addUser:function(userName){return $http.post("/api/users/",{userName:userName})},updateUserName:function(userName,userId){return $http.put("/api/users/",{userName:userName,userId:userId})},getUserName:function(userId){return $http.get("/api/users/"+userId)},updateUserScore:function(userId){return $http.put("/api/users/score/",{userId:userId})}}});